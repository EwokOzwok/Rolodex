run_app()
## code to prepare `data` dataset goes here
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
usethis::use_data(data, overwrite = TRUE)
library(Rolodex)
run_app()
devtools::install_github("EwokOzwok/Rolodex")
## code to prepare `data` dataset goes here
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
usethis::use_data(data, overwrite = TRUE)
## code to prepare `data` dataset goes here
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
usethis::use_data(data, overwrite = TRUE)
library(Rolodex)
run_app()
devtools::install_github("EwokOzwok/Rolodex")
library(Rolodex)
run_app()
## code to prepare `data` dataset goes here
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
usethis::use_data(data, overwrite = TRUE)
run_app()
library(Rolodex)
remove.packages("Rolodex")
## Fill the DESCRIPTION ----
## Add meta data about your application
##
## /!\ Note: if you want to change the name of your app during development,
## either re-run this function, call golem::set_golem_name(), or don't forget
## to change the name in the app_sys() function in app_config.R /!\
##
golem::fill_desc(
pkg_name = "Rolodex", # The Name of the package containing the App
pkg_title = "Rolodex", # The Title of the package containing the App
pkg_description = "Project ACCESS Resource Rolodex App.", # The Description of the package containing the App
author_first_name = "Evan", # Your First Name
author_last_name = "Ozmat", # Your Last Name
author_email = "eozmat@albany.edu", # Your Email
repo_url = NULL, # The URL of the GitHub Repo (optional),
pkg_version = "1.0.0.2000" # The Version of the package containing the App
)
devtools::install_github("EwokOzwok/Rolodex")
library(Rolodex)
run_app()
run_app()
remove.packages("Rolodex")
devtools::install_github("EwokOzwok/Rolodex")
devtools::install_github("EwokOzwok/Rolodex")
library(Rolodex)
library(Rolodex)
run_app()
library(Rolodex)
run_app()
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
run_app()
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
remove.packages("Rolodex")
library(RoloTrial)
remove.packages("RoloTrial")
devtools::install_github("EwokOzwok/Rolodex")
remove.packages("Rolodex")
devtools::install_github("EwokOzwok/Rolodex")
## If you want to deploy to ShinyProxy
golem::add_dockerfile_with_renv_shinyproxy(output_dir = "deploy", document = F, port=3838)
## Docker ----
## If you want to deploy via a generic Dockerfile
golem::add_dockerfile_with_renv(output_dir = "deploy")
library(Rolodex)
remove.packages("Rolodex")
devtools::install_github("EwokOzwok/Rolodex")
1
devtools::install_github("EwokOzwok/Rolodex")
devtools::install_github("EwokOzwok/Rolodex")
library(Rolodex)
remove.packages("Rolodex")
devtools::install_github("EwokOzwok/Rolodex")
remove.packages("Rolodex")
devtools::install_github("EwokOzwok/Rolodex")
library(ggplot2)
library(readexcel)
setwd("C:/Users/intra/OneDrive/Desktop")
data<-readxl::read_excel("Intervention and Referral Frequency.xlsx")
View(data)
referrals<-data[,3:4]
interventions<-data[,1:2]
ggplot(data, aes(x=frequency())) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")
ggplot(data, aes(x=frequency())) +
geom_histogram(aes(after_stat(density)), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")
ggplot(data, aes(x=frequency) +
geom_histogram(aes(after_stat(density), colour="black", fill="white")+
geom_density(
mapping = NULL,
data = data,
stat = "density",
position = "identity",
...,
na.rm = FALSE,
orientation = NA,
show.legend = NA,
inherit.aes = TRUE,
outline.type = "upper"
)
geom_density(
geom_density(
mapping = NULL,
data = intervention$frequency,
stat = "density",
position = "identity",
...,
na.rm = FALSE,
orientation = NA,
show.legend = NA,
inherit.aes = TRUE,
outline.type = "upper"
)
hist(interventions$frequency)
hist(interventions$Frequency...2)
ggplot(data, aes(x=Frequency...2) +
geom_histogram(aes(after_stat(density), colour="black", fill="white") +
geom_histogram(after_stat(density), colour="black", fill="white") +
geom_histogram(after_stat(density), aes(colour="black", fill="white")) +
ggplot(data, aes(x=Frequency...2) +
geom_histogram(after_stat(density), aes(colour="black", fill="white")) +
geom_density(alpha=.2, fill="#FF6666")
interventions %>%
ggplot( aes(x=Frequency...2)) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8) +
ggtitle("Night price distribution of Airbnb appartements") +
theme_ipsum()
library(dplyr)
interventions %>%
ggplot( aes(x=Frequency...2)) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8) +
ggtitle("Night price distribution of Airbnb appartements") +
theme_ipsum()
library(hrbrthemes)
install.packages("hrbrthemes")
library(hrbrthemes)
data<-readxl::read_excel("Intervention and Referral Frequency.xlsx")
interventions<-data[,1:2]
referrals<-data[,3:4]
interventions %>%
ggplot( aes(x=Frequency...2)) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8) +
ggtitle("Night price distribution of Airbnb appartements") +
theme_ipsum()
referrals %>%
ggplot( aes(x=Frequency...2)) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8) +
ggtitle("Night price distribution of Airbnb appartements") +
theme_ipsum()
referrals %>%
ggplot( aes(x=Frequency...4)) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8) +
ggtitle("Night price distribution of Airbnb appartements") +
theme_ipsum()
table(referrals)
library(ggplot2)
library(readexcel)
library(dplyr)
library(hrbrthemes)
data<-readxl::read_excel("Intervention and Referral Frequency.xlsx")
interventions<-data[,1:10]
referrals<-data[,11:16]
referrals %>%
ggplot( aes(x=Frequency...4)) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8) +
ggtitle("Night price distribution of Airbnb appartements") +
theme_ipsum()
table(referrals)
View(referrals)
tibble(referrals)
summary(referrals)
hist(referrals)
hist(as.numeric(referrals))
hist(as.numeric(referrals))
hist(referrals$`HIV Testing`)
table(referrals[,1:10])
table(referrals[2,])
## Add modules ----
## Create a module infrastructure in R/
golem::add_module(name = "Accordion", with_test = TRUE) # Name of the module
golem::add_module(name = "info", with_test = TRUE) # Name of the module
## code to prepare `data` dataset goes here
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
usethis::use_data(data, overwrite = TRUE)
library(Rolodex)
run_app()
library(Rolodex)
run_app()
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
832/11360
devtools::install_github("EwokOzwok/Rolodex")
library(Rolodex)
run_app()
## code to prepare `data` dataset goes here
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
usethis::use_data(data, overwrite = TRUE)
library(Rolodex)
run_app()
## code to prepare `data` dataset goes here
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
usethis::use_data(data, overwrite = TRUE)
library(Rolodex)
run_app()
## code to prepare `data` dataset goes here
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
usethis::use_data(data, overwrite = TRUE)
library(Rolodex)
run_app()
remove.packages("Rolodex")
devtools::install_github("EwokOzwok/Rolodex")
## code to prepare `data` dataset goes here
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
usethis::use_data(data, overwrite = TRUE)
library(Rolodex)
run_app()
remove.packages("Rolodex")
devtools::install_github("EwokOzwok/Rolodex")
## If you want to deploy to ShinyProxy
golem::add_dockerfile_with_renv_shinyproxy(output_dir = "deploy")
shinyloadtest::record_session('http://localhost:3838/')
run_app()
library(Rolodex)
run_app()
shinyloadtest::record_session('http://localhost:3838/')
shinyloadtest::record_session('http://localhost:3838/')
shinyloadtest::record_session('http://localhost:3838/')
df <- shinyloadtest::load_runs("run1")
shinyloadtest::shinyloadtest_report(df, "run1.html")
df <- shinyloadtest::load_runs("run35")
shinyloadtest::shinyloadtest_report(df, "run35.html")
library(Rolodex)
profvis::profvis(print(Rolodex::run_app()))
profvis::profvis(print(Rolodex::run_app()))
profvis::profvis(print(Rolodex::run_app()))
## If you want to deploy to ShinyProxy
golem::add_dockerfile_with_renv_shinyproxy(output_dir = "deploy")
shinyloadtest::record_session('http://localhost:3838/')
df <- shinyloadtest::load_runs("run1")
shinyloadtest::shinyloadtest_report(df, "run1.html")
df <- shinyloadtest::load_runs("run5")
shinyloadtest::shinyloadtest_report(df, "run5.html")
library(Rolodex)
remove.packages("Rolodex")
devtools::install_github("EwokOzwok/Rolodex")
df <- shinyloadtest::load_runs("run1")
shinyloadtest::shinyloadtest_report(df, "run1.html")
library(Rolodex)
run_app()
library(Rolodex)
profvis::profvis(print(Rolodex::run_app()))
library(Rolodex)
profvis::profvis(print(Rolodex::run_app()))
remove.packages("Rolodex")
devtools::install_github("EwokOzwok/Rolodex")
## code to prepare `data` dataset goes here
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
usethis::use_data(data, overwrite = TRUE)
library(Rolodex)
run_app()
library(Rolodex)
library(Rolodex)
run_app()
library(Rolodex)
run_app()
remove.packages("Rolodex")
devtools::install_github("EwokOzwok/Rolodex")
df <- shinyloadtest::load_runs("run10")
shinyloadtest::shinyloadtest_report(df, "run10.html")
library(Rolodex)
run_app()
## code to prepare `data` dataset goes here
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
usethis::use_data(data, overwrite = TRUE)
run_app()
library(Rolodex)
run_app()
## code to prepare `data` dataset goes here
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
usethis::use_data(data, overwrite = TRUE)
library(Rolodex)
run_app()
setwd("C:/Users/intra/OneDrive/Desktop/Rolodex/data-raw")
## code to prepare `data` dataset goes here
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
setwd("C:/Users/intra/OneDrive/Desktop/Rolodex")
## code to prepare `data` dataset goes here
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
usethis::use_data(data, overwrite = TRUE)
library(Rolodex)
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
## code to prepare `data` dataset goes here
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
usethis::use_data(data, overwrite = TRUE)
run_app()
run_app()
library(Rolodex)
run_app()
remove.packages("Rolodex")
devtools::install_github("EwokOzwok/Rolodex")
devtools::install_github("EwokOzwok/Rolodex")
install.packages("htmltools", force=T)
install.packages("htmltools", force = T)
library(Rolodex)
run_app()
library(Rolodex)
run_app()
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
remove.packages("Rolodex")
devtools::install_github("EwokOzwok/Rolodex")
## Docker ----
## If you want to deploy via a generic Dockerfile
golem::add_dockerfile_with_renv(output_dir = "deploy")
shinyloadtest::record_session('http://localhost:3838/')
#Run in Terminal
# shinycannon recording.log http://localhost:3838/ --workers 10 --loaded-duration-minutes 2 --output-dir run1
# shinycannon recording.log http://localhost:3838/ --workers 10 --loaded-duration-minutes 2 --output-dir run10
df <- shinyloadtest::load_runs("run1")
shinyloadtest::shinyloadtest_report(df, "run1.html")
## code to prepare `data` dataset goes here
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
usethis::use_data(data, overwrite = TRUE)
library(Rolodex)
run_app()
remove.packages("Rolodex")
devtools::install_github("EwokOzwok/Rolodex")
remove.packages("htmltools")
remove.packages("httpuv")
remove.packages("Rolodex")
devtools::install_github("EwokOzwok/Rolodex")
install.packages("htmltools")
install.packages("httpuv")
devtools::install_github("EwokOzwok/Rolodex")
library(htmltools)
install.packages("htmltools")
install.packages("htmltools")
library(htmltools)
devtools::install_github("EwokOzwok/Rolodex")
## Fill the DESCRIPTION ----
## Add meta data about your application
##
## /!\ Note: if you want to change the name of your app during development,
## either re-run this function, call golem::set_golem_name(), or don't forget
## to change the name in the app_sys() function in app_config.R /!\
##
golem::fill_desc(
pkg_name = "Rolodex", # The Name of the package containing the App
pkg_title = "Rolodex", # The Title of the package containing the App
pkg_description = "Project ACCESS Resource Rolodex App is a progressive web application built for Project ACCESS, a SAMHSA-funded translational research initiative, to help UAlbany students access on- and off-campus resources and referrals to support academic success!", # The Description of the package containing the App
author_first_name = "Evan", # Your First Name
author_last_name = "Ozmat", # Your Last Name
author_email = "eozmat@albany.edu", # Your Email
repo_url = NULL, # The URL of the GitHub Repo (optional),
pkg_version = "1.1.0.0000" # The Version of the package containing the App
)
## Create Common Files ----
## See ?usethis for more information
usethis::use_apache_license("Evan E. Ozmat")
?use_apache_license
## Create Common Files ----
## See ?usethis for more information
usethis::use_apache_license(version = 2)
remove.packages("Rolodex")
devtools::install_github("EwokOzwok/Rolodex")
## Docker ----
## If you want to deploy via a generic Dockerfile
golem::add_dockerfile_with_renv(output_dir = "deploy")
library(Rolodex)
run_app()
## code to prepare `data` dataset goes here
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
usethis::use_data(data, overwrite = TRUE)
run_app()
run_app()
remove.packages("Rolodex")
devtools::install_github("EwokOzwok/Rolodex")
## code to prepare `data` dataset goes here
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
usethis::use_data(data, overwrite = TRUE)
library(Rolodex)
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
library(Rolodex)
remove.packages("Rolodex")
devtools::install_github("EwokOzwok/Rolodex")
library(Rolodex)
run_app()
## code to prepare `data` dataset goes here
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
usethis::use_data(data, overwrite = TRUE)
library(Rolodex)
run_app()
remove.packages("Rolodex")
devtools::install_github("EwokOzwok/Rolodex")
library(Rolodex)
run_app()
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
setwd("C:/Users/intra/OneDrive/Desktop/Rolodex/data-raw")
## code to prepare `data` dataset goes here
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
setwd("C:/Users/intra/OneDrive/Desktop/Rolodex")
## code to prepare `data` dataset goes here
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
usethis::use_data(data, overwrite = TRUE)
library(Rolodex)
run_app()
library(Rolodex)
remove.packages("Rolodex")
devtools::install_github("EwokOzwok/Rolodex")
devtools::install_github("EwokOzwok/Rolodex")
library(Rolodex)
remove.packages("Rolodex")
devtools::install_github("EwokOzwok/Rolodex")
pkgload::load_all(export_all = F,helpers = F,attach_testthat = FALSE)
options("golem.app.prod" = TRUE)
Rolodex::run_app() # add parameters here (if any)
library(Rolodex)
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
library(Rolodex)
remove.packages("Rolodex")
devtools::install_github('EwokOzwok/Rolodex')
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
usethis::use_data(data, overwrite = TRUE)
library(Rolodex)
run_app()
library(Rolodex)
run_app()
remove.packages("Rolodex")
