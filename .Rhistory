for(i in FactorCols){
df[,i]<-as.factor(unlist(df[,i]))
}
hist(df$S_MH30D_Dep)
describe(df$S_MH30D_Dep)
library(haven)
library(psych)
df<-read_sav("MassBaseline3.29.24.sav")
colnames(df)
testscreen<-dplyr::select(df, PARTID, AUDIT,DAST, S_MH30D_Dep, S_DepDays)
describe(testscreen$AUDIT)
testscreen<-as.numeric(unlist(testscreen))
describe(testscreen$AUDIT)
testscreen<-as.data.frame(as.numeric(unlist(testscreen)))
describe(testscreen$AUDIT)
hist(testscreen$AUDIT)
testscreen<-as.data.frame(as.matrix(dplyr::select(df, PARTID, AUDIT,DAST, S_MH30D_Dep, S_DepDays)))
testscreen
describe(testscreen$AUDIT)
max(testscreen$AUDIT)
max(testscreen$DAST)
testscreen<- testscreen[testscreen$AUDIT>3,]
testscreen
View(testscreen)
testscreen<- testscreen[testscreen$DAST>0,]
View(testscreen)
library(haven)
library(psych)
df<-read_sav("MassBaseline3.29.24.sav")
colnames(df)
testscreen<-as.data.frame(as.matrix(dplyr::select(df, PARTID, SC0, SC1, S_MH30D_Dep, S_DepDays)))
testscreen<- testscreen[testscreen$SC1>0,]
testscreen
df<-read_sav("MassBaseline3.29.24.sav")
colnames(df)
testscreen<-as.data.frame(as.matrix(dplyr::select(df, PARTID, SC0, SC1, S_MH30D_Dep, S_DepDays)))
testscreen<- testscreen[testscreen$SC1>0,]
df$SC1
testscreen<- testscreen[testscreen$SC1>0,]
testscreen
testscreen<-as.data.frame(as.matrix(dplyr::select(df, PARTID, SC0, SC1, S_MH30D_Dep, S_DepDays)))
testscreen<-na.omit(testscreen)
testscreen<-as.data.frame(as.matrix(dplyr::select(df, PARTID, SC0, SC1)))
testscreen<-na.omit(testscreen)
testscreen<- testscreen[testscreen$SC1>0,]
View(testscreen)
testscreen<-as.data.frame(as.matrix(dplyr::select(df, PARTID, SC0, SC1)))
testscreen<-na.omit(testscreen)
testscreen<- testscreen[testscreen$SC0>3,]
View(testscreen)
testscreen<-as.data.frame(as.matrix(dplyr::select(df, PARTID, SC0)))
testscreen<-na.omit(testscreen)
testscreen<- testscreen[testscreen$SC0>3,]
View(testscreen)
testscreen<-as.data.frame(as.matrix(dplyr::select(df, PARTID, SC0)))
testscreen$SC0
testscreen$PARTID
testscreen<-na.omit(testscreen)
hist(testscreen$SC0)
testscreen$SC0<-as.numeric(unlist(testscreen$SC0))
hist(testscreen$SC0)
table(df$SchoolOrTrainingProgram)
library(haven)
library(psych)
df<-read_sav("MassBaseline3.29.24.sav")
colnames(df)
testscreen<-as.data.frame(as.matrix(dplyr::select(df, PARTID, SC0)))
testscreen<-na.omit(testscreen)
testscreen$SC0<-as.numeric(unlist(testscreen$SC0))
hist(testscreen$SC0)
testscreen<- testscreen[testscreen$SC0>3,]
df<- df[,-c(1:4,6:7,9:18,598:600)]
correct_col_names<-read.csv("Corrected_Col_names.csv", header=T, sep=",", encoding="UTF-8-ROM")
colnames(df)<-correct_col_names$colnames.df.
# Numeric vs. Factor
NumericCols<-c(1:14, 16:32, 34,35,37,39:48, 50:132, 134:211, 213:265, 267:401, 403:522, 524, 526:554, 556:562, 564:581)
for(i in NumericCols){
df[,i]<-as.numeric(unlist(df[,i]))
}
FactorCols<-c(15, 33,36,38,49,133,212,266,402,523,525,555,563)
for(i in FactorCols){
df[,i]<-as.factor(unlist(df[,i]))
}
describe(df$S_MH30D_Dep)
# write.csv(df,"SBIRT_Col_names.csv", row.names = F)
#df<-as.data.frame(as.matrix(df))
# Gender Cleaning ---------------------------------------------------------
# Gender_df<-as.data.frame(matrix(data=NA, nrow=nrow(df), ncol=8))
# colnames(Gender_df)<-c("male",	"female",	"other specify",	"m2f",	"f2m",	"nconform",	"missing",	"refused")
#
# Gender_df$male<-ifelse(df$B_Gender==1,1,NA)
# Gender_df$female<-ifelse(df$B_Gender==2,2,NA)
# Gender_df$`other specify`<-ifelse(df$B_Gender==7,4,NA)
# Gender_df$m2f<-ifelse(df$B_Transgender==1,5,NA)
# Gender_df$f2m<-ifelse(df$B_Transgender==1,6,NA)
# Gender_df$nconform<-ifelse(df$B_Transgender==3,7,NA)
# Gender_df$missing<-ifelse(is.na(df$B_Gender)==T & is.na(df$B_Transgender)==T, -9,NA)
# Gender_df$refused<-ifelse(df$B_Gender==95,-7,NA)
#
#
# write.csv(Gender_df, "Gender_df.csv", row.names = F)
Gender_df<-read.csv("Gender_df.csv", header=T, sep=",", encoding="utf-8-rom")
df$SBIRT_Gender<-Gender_df$SBIRT_Gender
# Military Services -------------------------------------------------------
df$MilitaryServed<-df$B_ArmedForces-1
# Travel Time -----------------------------------------------------
df$ServiceTravelTime<-ifelse(df$S_Travel==6,1,df$S_Travel)
df$ServiceTravelTime<-ifelse(is.na(df$ServiceTravelTime)==T,-7,df$ServiceTravelTime)
# Education Variable Impute -----------------------------------------------
df$Education <- 2
df$EducationSpec <- -9
df$SchoolOrTrainingProgram <- -9
df$SchoolOrTrainingProgram <- ifelse(is.na(df$B_College)==T, -9, df$B_College)
table(df$SchoolOrTrainingProgram)
df$S_Income
df$M_HIncome
library(Rolodex)
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
remove.packages("Rolodex")
devtools::install_github("EwokOzwok/Rolodex")
## code to prepare `data` dataset goes here
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
usethis::use_data(data, overwrite = TRUE)
library(Rolodex)
run_app()
remove.packages("Rolodex")
devtools::install_github("EwokOzwok/Rolodex")
remove.packages("Rolodex")
devtools::install_github("EwokOzwok/Rolodex")
library(Rolodex)
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
library(Rolodex)
run_app()
## code to prepare `data` dataset goes here
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
usethis::use_data(data, overwrite = TRUE)
library(Rolodex)
run_app()
library(Rolodex)
source("C:/Users/intra/OneDrive/Desktop/New Shiny Apps/Rolodex/data-raw/data.R", echo=TRUE)
remove.packages("Rolodex")
devtools::install_github("EwokOzwok/Rolodex")
## code to prepare `data` dataset goes here
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
usethis::use_data(data, overwrite = TRUE)
library(Rolodex)
run_app()
## code to prepare `data` dataset goes here
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
usethis::use_data(data, overwrite = TRUE)
run_app()
library(Rolodex)
run_app()
remove.packages("Rolodex")
devtools::install_github("EwokOzwok/Rolodex")
library(Rolodex)
run_app()
## code to prepare `data` dataset goes here
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
usethis::use_data(data, overwrite = TRUE)
library(Rolodex)
run_app()
library(Rolodex)
remove.packages("Rolodex")
remotes::install_github("EwokOzwok/Rolodex")
## code to prepare `data` dataset goes here
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
usethis::use_data(data, overwrite = TRUE)
library(Rolodex)
run_app()
## code to prepare `data` dataset goes here
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
usethis::use_data(data, overwrite = TRUE)
library(Rolodex)
run_app()
library(Rolodex)
run_app()
## code to prepare `data` dataset goes here
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
usethis::use_data(data, overwrite = TRUE)
library(Rolodex)
run_app()
remove.packages("Rolodex")
remotes::install_github("EwokOzwok/Rolodex")
setwd("C:/Users/intra/OneDrive/Desktop")
df<-read.csv("SBIRTdata.csv", header = T, sep=',', encoding = "utf-8-rom")
df<-read.csv("SBIRTdata.csv", header = T, sep=',', encoding = "utf-8-rom")
cooccuring_screens<-dplyr::select(df, CooccurringScreen, CooccurringScreenStatus, CooccurringReferral)
table(cooccuring_screens)
cooccuring_screens<-dplyr::select(df, CooccurringScreen, CooccurringScreenStatus, CooccurringReferral)
table(cooccuring_screens)
table(cooccuring_screens$CooccurringScreen)
table(cooccuring_screens$CooccurringScreen)
table(cooccuring_screens$CooccurringScreenStatus)
table(cooccuring_screens$CooccurringReferral)
screen<-dplyr::select(df, SBIRTClientScreen, SBIRTScoreAUDIT,SBIRTScoreDAST)
table(screen$SBIRTClientScreen)
table(screen$SBIRTScoreAUDIT)
table(screen$SBIRTScoreDAST)
screen$SBIRTScoreDAST
screen<-dplyr::select(df, SBIRTClientScreen, SBIRTScoreAUDIT,SBIRTScoreDAST10)
table(screen$SBIRTClientScreen)
table(screen$SBIRTScoreAUDIT)
table(screen$SBIRTScoreDAST10)
contservice<-dplyr::select(df,SBIRTContService,BriefIntervention )
table(contservice$SBIRTContService)
table(contservice$BriefIntervention)
contservice<-dplyr::select(df,SBIRTClientScreen,SBIRTContService,BriefIntervention )
contservice<-contservice[contservice$SBIRTClientScreen==1,]
table(contservice$SBIRTContService)
table(contservice$BriefIntervention)
contservice<-dplyr::select(df,SBIRTClientScreen,SBIRTContService,BriefIntervention )
table(contservice$BriefIntervention)
df$BriefTreatment
table(df$BriefTreatment)
table(df$ReferralToTreatment)
library(psych)
library(dplyr)
library(haven)
Baseline<-read_sav("Baseline Ready.sav")
setwd("C:/Users/intra/OneDrive/Desktop/Mass Longitudinal Data/Merged Data/Vars of Interest")
library(psych)
library(dplyr)
library(haven)
Baseline<-read_sav("Baseline Ready.sav")
Exit<-read_sav("Exit Ready.sav")
Exit$SBIRT_ID
df<-merge(Baseline, Exit, by.y = "SBIRT_ID")
colnames(Exit[,4])<-"SBIRT_ID"
df<-merge(Baseline, Exit, by.y = "SBIRT_ID")
View(df)
library(psych)
library(dplyr)
library(haven)
Baseline<-read_sav("Baseline Ready.sav")
Exit<-read_sav("Exit Ready.sav")
colnames(Exit)
colnames(Exit) <- paste0("t2_", colnames(Exit))
colnames(Exit[,4])<-"SBIRT_ID"
df<-merge(Baseline, Exit, by.y = "SBIRT_ID")
Baseline$SBIRT_ID
Baseline<-Baseline[is.na(Baseline$SBIRT_ID)==F,]
Exit<-Exit[is.na(Exit$SBIRT_ID)==F,]
colnames(Exit[,4])<-"SBIRT_ID"
Exit$SBIRT_ID = Exit$t2_SBIRT_ID
Baseline<-Baseline[is.na(Baseline$SBIRT_ID)==F,]
Exit<-Exit[is.na(Exit$SBIRT_ID)==F,]
df<-merge(Baseline, Exit, by.y = "SBIRT_ID")
setwd('C:/users/intra/onedrive/Desktop')
FU_df<-read.csv("MassSurvey_6mo_Follow_up.csv", header=T, sep=',', encoding='utf-8-rom')
colnames(FU_df)
colnames(FU_df) <- paste0("t3_", colnames(FU_df))
setwd('C:/users/intra/onedrive/Desktop')
FU_df<-read.csv("MassSurvey_6mo_Follow_up.csv", header=T, sep=',', encoding='utf-8-rom')
colnames(FU_df) <- paste0("t3_", colnames(FU_df))
FU_df$SBIRT_ID<-FU_df$t3_SBIRT_ID
all_df<-merge(df, FU_df, by.y = "SBIRT_ID")
df$SBIRT_ID
options(scipen = 999)
df$SBIRT_ID
trailing_five_digits <- as.numeric(substr(as.character(df$SBIRT_ID), nchar(as.character(df$SBIRT_ID)) - 4, nchar(as.character(df$SBIRT_ID))))
trailing_five_digits
df$SBIRT_ID <- as.numeric(substr(as.character(df$SBIRT_ID), nchar(as.character(df$SBIRT_ID)) - 4, nchar(as.character(df$SBIRT_ID))))
all_df<-merge(df, FU_df, by.y = "SBIRT_ID")
# Calculate the differences
all_df$diff_T1_T2 <- all_df$t2_B_AlcUse30_1 - all_df$B_AlcUse30_1
all_df$diff_T1_T3 <- all_df$t3_B_AlcUse30_1 - all_df$B_AlcUse30_1
# Calculate the mean increase/decrease
mean_diff_T1_T2 <- mean(all_df$diff_T1_T2, na.rm = TRUE)
mean_diff_T1_T3 <- mean(all_df$diff_T1_T3, na.rm = TRUE)
# Print the results
cat("Mean increase/decrease from T1 to T2:", mean_diff_T1_T2, "\n")
cat("Mean increase/decrease from T1 to T3:", mean_diff_T1_T3, "\n")
all_df$diff_T1_T3,
all_df$diff_T1_T3
missing_ids <- setdiff(FU_df$SBIRT_ID, all_df$SBIRT_ID)
# View the missing IDs
print(missing_ids)
View(FU_df)
FU_df$SBIRT_ID
setwd('C:/users/intra/onedrive/Desktop')
FU_df<-readxl::read_excel("MassSurvey_6mo_Follow_up.xlsx")
colnames(FU_df) <- paste0("t3_", colnames(FU_df))
FU_df$SBIRT_ID<-FU_df$t3_SBIRT_ID
all_df<-merge(df, FU_df, by.y = "SBIRT_ID")
FU_df$SBIRT_ID
Baseline<-read_sav("Baseline Ready.sav")
Exit<-read_sav("Exit Ready.sav")
# SPECIAL Data CLEANING... ALL VARS
colnames(Exit) <- paste0("t2_", colnames(Exit))
Exit$SBIRT_ID = Exit$t2_SBIRT_ID
Baseline<-Baseline[is.na(Baseline$SBIRT_ID)==F,]
Exit<-Exit[is.na(Exit$SBIRT_ID)==F,]
library(psych)
library(dplyr)
library(haven)
setwd("C:/Users/intra/OneDrive/Desktop")
setwd("C:/Users/intra/OneDrive/Desktop/Mass Longitudinal Data/Merged Data/Vars of Interest")
Baseline<-read_sav("Baseline Ready.sav")
Exit<-read_sav("Exit Ready.sav")
# SPECIAL Data CLEANING... ALL VARS
colnames(Exit) <- paste0("t2_", colnames(Exit))
Exit$SBIRT_ID = Exit$t2_SBIRT_ID
Baseline<-Baseline[is.na(Baseline$SBIRT_ID)==F,]
Exit<-Exit[is.na(Exit$SBIRT_ID)==F,]
setwd('C:/users/intra/onedrive/Desktop')
FU_df<-readxl::read_excel("MassSurvey_6mo_Follow_up.xlsx")
colnames(FU_df) <- paste0("t3_", colnames(FU_df))
FU_df$SBIRT_ID<-FU_df$t3_SBIRT_ID
df<-merge(Baseline, Exit, by.y = "SBIRT_ID")
options(scipen = 999)
setwd('C:/users/intra/onedrive/Desktop')
FU_df<-readxl::read_excel("MassSurvey_6mo_Follow_up.xlsx")
colnames(FU_df) <- paste0("t3_", colnames(FU_df))
FU_df$SBIRT_ID<-FU_df$t3_SBIRT_ID
all_df<-merge(df, FU_df, by.y = "SBIRT_ID")
all_df$B_AlcUse30_1
all_df$t2_B_AlcUse30_1
all_df$t3_B_AlcUse30_1
all_df$t3_B_AlcUse30_1
all_df$t3_B_AlcUse30_1...17
all_df$B_AlcUse30_1
all_df$t2_B_AlcUse30_1
all_df$t3_B_AlcUse30_1<-all_df$t3_B_AlcUse30_1...17
# Calculate the differences
all_df$diff_T1_T2 <- all_df$t2_B_AlcUse30_1 - all_df$B_AlcUse30_1
all_df$diff_T1_T3 <- all_df$t3_B_AlcUse30_1 - all_df$B_AlcUse30_1
# Calculate the mean increase/decrease
mean_diff_T1_T2 <- mean(all_df$diff_T1_T2, na.rm = TRUE)
mean_diff_T1_T3 <- mean(all_df$diff_T1_T3, na.rm = TRUE)
# Print the results
cat("Mean increase/decrease from T1 to T2:", mean_diff_T1_T2, "\n")
cat("Mean increase/decrease from T1 to T3:", mean_diff_T1_T3, "\n")
vertical_table <- data.frame(
Time_Point = c("T1", "T2", "T3"),
Alcohol_Use = c(
mean(all_df$B_AlcUse30_1, na.rm = TRUE),
mean(all_df$t2_B_AlcUse30_1, na.rm = TRUE),
mean(all_df$t3_B_AlcUse30_1, na.rm = TRUE)
)
)
# Print the vertical table
print(vertical_table)
# Assuming you want to display only the first 10 rows from each variable
vertical_table <- data.frame(
T1 = all_df$B_AlcUse30_1[1:11],           # First 10 rows from T1
T2 = all_df$t2_B_AlcUse30_1[1:11],       # First 10 rows from T2
T3 = all_df$t3_B_AlcUse30_1[1:11]        # First 10 rows from T3
)
# Print the vertical table
print(vertical_table)
vertical_table$T1_T2_diff<-vertical_table$T2-vertical_table$T1
vertical_table$T1_T3_diff<-vertical_table$T3-vertical_table$T1
# Print the vertical table
print(vertical_table)
sum(nrow(vertical_table$T1_T2_diff<0))
sum(nrow(vertical_table[vertical_table$T1_T2_diff<0],))
2/11
3/11
all_df$B_TobUse30_1
all_df$B_MJ30D_MJ_1
all_df$t2_B_MJ30D_MJ_1
all_df$t3_B_AlcUse30_1...24
# Assuming you want to display only the first 10 rows from each variable
vertical_table <- data.frame(
T1 = all_df$AUDIT[1:11],           # First 10 rows from T1
T2 = all_df$t2_AUDIT[1:11],       # First 10 rows from T2
T3 = all_df$t3_AUDIT[1:11]        # First 10 rows from T3
)
# Print the vertical table
print(vertical_table)
vertical_table$T1_T2_diff<-vertical_table$T2-vertical_table$T1
vertical_table$T1_T3_diff<-vertical_table$T3-vertical_table$T1
# Print the vertical table
print(vertical_table)
vertical_table$T1_T2_diff<-vertical_table$T2-vertical_table$T1
# Print the vertical table
print(vertical_table)
vertical_table<-as.numeric(vertical_table)
vertical_table<-as.numeric(unlist(vertical_table))
vertical_table
# Assuming you want to display only the first 10 rows from each variable
vertical_table <- data.frame(
T1 = all_df$AUDIT[1:11],           # First 10 rows from T1
T2 = all_df$t2_AUDIT[1:11],       # First 10 rows from T2
T3 = all_df$t3_AUDIT[1:11]        # First 10 rows from T3
)
# Print the vertical table
print(vertical_table)
# Print the vertical table
print(vertical_table)
for(i in 1:ncol(vertical_table)){
vertical_table[,i]<-as.numeric(vertical_table[,i])
}
# Print the vertical table
print(vertical_table)
vertical_table$T1_T2_diff<-vertical_table$T2-vertical_table$T1
vertical_table$T1_T3_diff<-vertical_table$T3-vertical_table$T1
# Print the vertical table
print(vertical_table)
# Assuming you want to display only the first 10 rows from each variable
DAST_Table <- data.frame(
T1 = all_df$DAST[1:11],           # First 10 rows from T1
T2 = all_df$t2_DAST[1:11],       # First 10 rows from T2
T3 = all_df$t3_DAST[1:11]        # First 10 rows from T3
)
# Print the vertical table
print(DAST_Table)
for(i in 1:ncol(DAST_Table)){
DAST_Table[,i]<-as.numeric(DAST_Table[,i])
}
DAST_Table$T1_T2_diff<-DAST_Table$T2-DAST_Table$T1
DAST_Table$T1_T3_diff<-DAST_Table$T3-DAST_Table$T1
# Print the vertical table
print(DAST_Table)
6/11
mean(DAST_Table$T1_T3_diff)
AUDIT_Table$T1_T3_diff
# Assuming you want to display only the first 10 rows from each variable
AUDIT_Table <- data.frame(
T1 = all_df$AUDIT[1:11],           # First 10 rows from T1
T2 = all_df$t2_AUDIT[1:11],       # First 10 rows from T2
T3 = all_df$t3_AUDIT[1:11]        # First 10 rows from T3
)
# Print the vertical table
print(AUDIT_Table)
for(i in 1:ncol(AUDIT_Table)){
AUDIT_Table[,i]<-as.numeric(AUDIT_Table[,i])
}
AUDIT_Table$T1_T2_diff<-AUDIT_Table$T2-AUDIT_Table$T1
AUDIT_Table$T1_T3_diff<-AUDIT_Table$T3-AUDIT_Table$T1
# Print the vertical table
print(AUDIT_Table)
5/11
mean(AUDIT_Table$T1_T3_diff)
11/32
# Assuming you want to display only the first 10 rows from each variable
AUDIT_Table <- data.frame(
T1 = all_df$B_AlcUse30_1[1:11],           # First 10 rows from T1
T2 = all_df$t2_B_AlcUse30_1[1:11],       # First 10 rows from T2
T3 = all_df$t3_B_AlcUse30_1...17[1:11]        # First 10 rows from T3
)
# Print the vertical table
print(AUDIT_Table)
for(i in 1:ncol(AUDIT_Table)){
AUDIT_Table[,i]<-as.numeric(AUDIT_Table[,i])
}
AUDIT_Table$T1_T2_diff<-AUDIT_Table$T2-AUDIT_Table$T1
AUDIT_Table$T1_T3_diff<-AUDIT_Table$T3-AUDIT_Table$T1
AUDIT_Table$T1_T3_diff
2/11
AUDIT_Table$T1_T3_diff/AUDIT_Table$T1
reduced<-AUDIT_Table$T1_T3_diff/AUDIT_Table$T1
na.omit(reduced)
reduced<-na.omit(reduced)
reduced
mean(reduced)
mean(-1.0000000,-0.1250000, .5, 0.1428571)
2/11
(100+12.5)/2
# Assuming you want to display only the first 10 rows from each variable
AUDIT_Table <- data.frame(
T1 = all_df$B_TobUse30_1[1:11],           # First 10 rows from T1
T2 = all_df$t2_B_TobUse30_1[1:11],       # First 10 rows from T2
T3 = all_df$t3_B_TobUse30_1[1:11]        # First 10 rows from T3
)
# Print the vertical table
print(AUDIT_Table)
for(i in 1:ncol(AUDIT_Table)){
AUDIT_Table[,i]<-as.numeric(AUDIT_Table[,i])
}
AUDIT_Table$T1_T2_diff<-AUDIT_Table$T2-AUDIT_Table$T1
AUDIT_Table$T1_T3_diff<-AUDIT_Table$T3-AUDIT_Table$T1
# Print the vertical table
print(AUDIT_Table)
AUDIT_Table$T2_T3_diff<-AUDIT_Table$T3-AUDIT_Table$T2
AUDIT_Table$T2_T3_diff
library(Rolodex)
run_app()
library(Rolodex)
remove.packages("Rolodex")
remotes::install_github("EwokOzwok/Rolodex")
library(Rolodex)
run_app()
## code to prepare `data` dataset goes here
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
usethis::use_data(data, overwrite = TRUE)
library(Rolodex)
run_app()
library(Rolodex)
remove.packages("Rolodex")
remotes::install_github("EwokOzwok/Rolodex")
## code to prepare `data` dataset goes here
data<-readxl::read_excel("data-raw/Rolodex.xlsx")
usethis::use_data(data, overwrite = TRUE)
library(Rolodex)
run_app()
library(Rolodex)
remove.packages("Rolodex")
remotes::install_github("EwokOzwok/Rolodex")
